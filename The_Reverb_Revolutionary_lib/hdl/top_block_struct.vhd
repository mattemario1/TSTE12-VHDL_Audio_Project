-- VHDL Entity The_Reverb_Revolutionary_lib.TOP_BLOCk.symbol
--
-- Created:
--          by - emipi270.student-liu.se (muxen2-102.ad.liu.se)
--          at - 14:27:24 11/01/24
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY TOP_BLOCk IS
   PORT( 
      adcdat       : IN     std_logic;
      fpga_clk     : IN     std_logic;
      fpga_reset_n : IN     std_logic;
      kb_clk       : IN     std_logic;
      kb_data      : IN     std_logic;
      sram_data    : IN     std_logic_vector (15 DOWNTO 0);
      Hex0         : OUT    std_logic_vector (6 DOWNTO 0);
      Hex1         : OUT    std_logic_vector (6 DOWNTO 0);
      Hex2         : OUT    std_logic_vector (6 DOWNTO 0);
      Hex6         : OUT    std_logic_vector (6 DOWNTO 0);
      Hex7         : OUT    std_logic_vector (6 DOWNTO 0);
      adclrck      : OUT    std_logic;
      bclk         : OUT    std_logic;
      dacdat       : OUT    std_logic;
      daclrck      : OUT    std_logic;
      i2c_scl      : OUT    std_logic;
      sram_address : OUT    std_logic_vector (19 DOWNTO 0);
      sram_ce_n    : OUT    std_logic;
      sram_lb_n    : OUT    std_logic;
      sram_oe_n    : OUT    std_logic;
      sram_ub_n    : OUT    std_logic;
      sram_we_n    : OUT    std_logic;
      vga_b        : OUT    std_logic_vector (7 DOWNTO 0);
      vga_blank_n  : OUT    std_logic;
      vga_clk      : OUT    std_logic;
      vga_g        : OUT    std_logic_vector (7 DOWNTO 0);
      vga_hsync_n  : OUT    std_logic;
      vga_r        : OUT    std_logic_vector (7 DOWNTO 0);
      vga_sync     : OUT    std_logic;
      vga_vsync_n  : OUT    std_logic;
      xck          : OUT    std_logic;
      i2c_sda      : INOUT  std_logic
   );

-- Declarations

type exemplar_string_array is array (natural range <>, natural range <>) of character;
attribute pin_number : string;
attribute array_pin_number : exemplar_string_array;
attribute pin_number of fpga_clk : signal is "Y2";
attribute pin_number of fpga_reset_n : signal is "M23";
attribute pin_number of vga_clk : signal is "A12";
attribute pin_number of vga_sync : signal is "C10";
attribute pin_number of vga_blank_n : signal is "F11";
attribute array_pin_number of vga_r : signal is ("H10", "H8 ", "J12", "G10", "F12", "D10", "E11", "E12");
attribute array_pin_number of vga_g : signal is ("C9 ", "F10", "B8 ", "C8 ", "H12", "F8 ", "G11", "G8 ");
attribute array_pin_number of vga_b : signal is ("D12", "D11", "C12", "A11", "B11", "C11", "A10", "B10");
attribute pin_number of vga_hsync_n : signal is "G13";
attribute pin_number of vga_vsync_n : signal is "C13";
attribute array_pin_number of sram_data : signal is ("AG3", "AF3", "AE4", "AE3", "AE1", "AE2", "AD2", "AD1", "AF7", "AG6", "AH6", "AF6", "AH4", "AG4", "AF4", "AH3");
attribute array_pin_number of sram_address : signal is ("T8  ", "AB8 ", "AB9 ", "AC11", "AB11", "AA4 ", "AC3 ", "AB4 ", "AD3 ", "AF2 ", "T7  ", "AF5 ", "AC5 ", "AB5 ", "AE6 ", "AB6 ", "AC7 ", "AE7 ", "AD7 ", "AB7 ");
attribute pin_number of sram_we_n : signal is "AE8";
attribute pin_number of sram_oe_n : signal is "AD5";
attribute pin_number of sram_ce_n : signal is "AF8";
attribute pin_number of sram_lb_n : signal is "AD4";
attribute pin_number of sram_ub_n : signal is "AC4";
attribute array_pin_number of HEX6 : signal is ("AC17","AA15","AB15","AB17","AA16","AB16","AA17");
attribute array_pin_number of HEX7 : signal is ("AA14","AG18","AF17","AH17","AG17","AE17","AD17");
attribute pin_number of gled0 : signal is "E21";
attribute pin_number of gled1 : signal is "E22";
attribute pin_number of kb_clk : signal is "G6";
attribute pin_number of kb_data : signal is "H5";
attribute array_pin_number of db : signal is ("H15","G16","G15","F15","H17","J16","H16","J15","G17","J17","H19","J19","E18","F18","F21","E19","F19","G19");
attribute array_pin_number of hex0 : signal is ("H22","J22","L25","L26","E17","F22","G18");
attribute array_pin_number of hex1 : signal is ("U24","U23","W25","W22","W21","Y22","M24");
attribute array_pin_number of hex2 : signal is ("W28 ","W27 ","Y26 ","W26 ","Y25 ","AA26","AA25");
attribute pin_number of adcdat : signal is "D2";
attribute pin_number of adclrck : signal is "C2";
attribute pin_number of bclk : signal is "F2";
attribute pin_number of daclrck : signal is "E3";
attribute pin_number of i2c_sda : signal is "A8";
attribute pin_number of xck : signal is "E1";
attribute pin_number of dacdat : signal is "D1";
attribute pin_number of i2c_scl : signal is "B7";

END TOP_BLOCk ;

--
-- VHDL Architecture The_Reverb_Revolutionary_lib.TOP_BLOCk.struct
--
-- Created:
--          by - emipi270.student-liu.se (muxen2-102.ad.liu.se)
--          at - 14:27:24 11/01/24
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY The_Reverb_Revolutionary_lib;

ARCHITECTURE struct OF TOP_BLOCk IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Balance_setting     : std_logic_vector(3 DOWNTO 0);
   SIGNAL Echo_room_setting   : std_logic_vector(3 DOWNTO 0);
   SIGNAL Echo_volume_setting : std_logic_vector(3 DOWNTO 0);
   SIGNAL Selected_setting    : std_logic_vector(1 DOWNTO 0);
   SIGNAL Volume_setting      : std_logic_vector(3 DOWNTO 0);
   SIGNAL c0                  : STD_LOGIC;
   SIGNAL db                  : std_logic_vector(17 DOWNTO 0);
   SIGNAL locked              : STD_LOGIC;


   -- Component Declarations
   COMPONENT AUDIO_Subsystem
   PORT (
      Balance_setting     : IN     std_logic_vector (3 DOWNTO 0);
      Echo_room_setting   : IN     std_logic_vector (3 DOWNTO 0);
      Echo_volume_setting : IN     std_logic_vector (3 DOWNTO 0);
      Volume_setting      : IN     std_logic_vector (3 DOWNTO 0);
      adcdat              : IN     std_logic ;
      fpga_clk            : IN     std_logic ;
      fpga_reset_n        : IN     std_logic ;
      adclrck             : OUT    std_logic ;
      bclk                : OUT    std_logic ;
      dacdat              : OUT    std_logic ;
      daclrck             : OUT    std_logic ;
      db                  : OUT    std_logic_vector (17 DOWNTO 0);
      i2c_scl             : OUT    std_logic ;
      xck                 : OUT    std_logic ;
      i2c_sda             : INOUT  std_logic 
   );
   END COMPONENT;
   COMPONENT CONTROL_Subsystem
   PORT (
      fpga_clk            : IN     std_logic ;
      fpga_reset_n        : IN     std_logic ;
      kb_clk              : IN     std_logic ;
      kb_data             : IN     std_logic ;
      Balance_setting     : OUT    std_logic_vector (3 DOWNTO 0);
      Echo_room_setting   : OUT    std_logic_vector (3 DOWNTO 0);
      Echo_volume_setting : OUT    std_logic_vector (3 DOWNTO 0);
      Hex0                : OUT    std_logic_vector (6 DOWNTO 0);
      Hex1                : OUT    std_logic_vector (6 DOWNTO 0);
      Hex2                : OUT    std_logic_vector (6 DOWNTO 0);
      Hex6                : OUT    std_logic_vector (6 DOWNTO 0);
      Hex7                : OUT    std_logic_vector (6 DOWNTO 0);
      Selected_setting    : OUT    std_logic_vector (1 DOWNTO 0);
      Volume_setting      : OUT    std_logic_vector (3 DOWNTO 0);
      db                  : OUT    std_logic_vector (9 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT VISUAL_Subsystem
   PORT (
      Audio_bar           : IN     std_logic_vector (17 DOWNTO 0);
      Balance_setting     : IN     std_logic_vector (3 DOWNTO 0);
      Echo_room_setting   : IN     std_logic_vector (3 DOWNTO 0);
      Echo_volume_setting : IN     std_logic_vector (3 DOWNTO 0);
      SRAM_Data           : IN     std_logic_vector (15 DOWNTO 0);
      Selected_setting    : IN     std_logic_vector (1 DOWNTO 0);
      Volume_setting      : IN     std_logic_vector (3 DOWNTO 0);
      fpga_clk            : IN     std_logic ;
      fpga_reset_n        : IN     std_logic ;
      c0                  : OUT    STD_LOGIC ;
      locked              : OUT    STD_LOGIC ;
      sram_address        : OUT    std_logic_vector (19 DOWNTO 0);
      sram_ce_n           : OUT    std_logic ;
      sram_lb_n           : OUT    std_logic ;
      sram_oe_n           : OUT    std_logic ;
      sram_ub_n           : OUT    std_logic ;
      sram_we_n           : OUT    std_logic ;
      vga_b               : OUT    std_logic_vector (7 DOWNTO 0);
      vga_blank_n         : OUT    std_logic ;
      vga_clk             : OUT    std_logic ;
      vga_g               : OUT    std_logic_vector (7 DOWNTO 0);
      vga_hsync_n         : OUT    std_logic ;
      vga_r               : OUT    std_logic_vector (7 DOWNTO 0);
      vga_sync            : OUT    std_logic ;
      vga_vsync_n         : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : AUDIO_Subsystem USE ENTITY The_Reverb_Revolutionary_lib.AUDIO_Subsystem;
   FOR ALL : CONTROL_Subsystem USE ENTITY The_Reverb_Revolutionary_lib.CONTROL_Subsystem;
   FOR ALL : VISUAL_Subsystem USE ENTITY The_Reverb_Revolutionary_lib.VISUAL_Subsystem;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_1 : AUDIO_Subsystem
      PORT MAP (
         Balance_setting     => Balance_setting,
         Echo_room_setting   => Echo_room_setting,
         Echo_volume_setting => Echo_volume_setting,
         Volume_setting      => Volume_setting,
         adcdat              => adcdat,
         fpga_clk            => c0,
         fpga_reset_n        => locked,
         adclrck             => adclrck,
         bclk                => bclk,
         dacdat              => dacdat,
         daclrck             => daclrck,
         db                  => db,
         i2c_scl             => i2c_scl,
         xck                 => xck,
         i2c_sda             => i2c_sda
      );
   U_0 : CONTROL_Subsystem
      PORT MAP (
         fpga_clk            => fpga_clk,
         fpga_reset_n        => fpga_reset_n,
         kb_clk              => kb_clk,
         kb_data             => kb_data,
         Balance_setting     => Balance_setting,
         Echo_room_setting   => Echo_room_setting,
         Echo_volume_setting => Echo_volume_setting,
         Hex0                => Hex0,
         Hex1                => Hex1,
         Hex2                => Hex2,
         Hex6                => Hex6,
         Hex7                => Hex7,
         Selected_setting    => Selected_setting,
         Volume_setting      => Volume_setting,
         db                  => OPEN
      );
   U_2 : VISUAL_Subsystem
      PORT MAP (
         Audio_bar           => db,
         Balance_setting     => Balance_setting,
         Echo_room_setting   => Echo_room_setting,
         Echo_volume_setting => Echo_volume_setting,
         SRAM_Data           => sram_data,
         Selected_setting    => Selected_setting,
         Volume_setting      => Volume_setting,
         fpga_clk            => fpga_clk,
         fpga_reset_n        => fpga_reset_n,
         c0                  => c0,
         locked              => locked,
         sram_address        => sram_address,
         sram_ce_n           => sram_ce_n,
         sram_lb_n           => sram_lb_n,
         sram_oe_n           => sram_oe_n,
         sram_ub_n           => sram_ub_n,
         sram_we_n           => sram_we_n,
         vga_b               => vga_b,
         vga_blank_n         => vga_blank_n,
         vga_clk             => vga_clk,
         vga_g               => vga_g,
         vga_hsync_n         => vga_hsync_n,
         vga_r               => vga_r,
         vga_sync            => vga_sync,
         vga_vsync_n         => vga_vsync_n
      );

END struct;
