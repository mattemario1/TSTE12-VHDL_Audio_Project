-- VHDL Entity The_Reverb_Revolutionary_lib.Visual_memory_interface.interface
--
-- Created:
--          by - emipi270.student-liu.se (muxen2-104.ad.liu.se)
--          at - 16:52:37 10/08/24
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY altera_mf;
USE altera_mf.all;
USE ieee.std_logic_arith.all;

ENTITY Visual_memory_interface IS
   PORT( 
      c0           : IN     STD_LOGIC;
      hblanc       : IN     std_logic;
      hcnt         : IN     unsigned (10 DOWNTO 0);
      locked       : IN     STD_LOGIC;
      vblanc       : IN     std_logic;
      vcnt         : IN     unsigned (9 DOWNTO 0);
      SRAM_Data    : OUT    std_logic_vector (15 DOWNTO 0);
      sram_address : OUT    std_logic_vector (19 DOWNTO 0);
      sram_ce_n    : OUT    std_logic;
      sram_lb_n    : OUT    std_logic;
      sram_oe_n    : OUT    std_logic;
      sram_ub_n    : OUT    std_logic;
      sram_we_n    : OUT    std_logic
   );

-- Declarations

END Visual_memory_interface ;

--
-- VHDL Architecture The_Reverb_Revolutionary_lib.Visual_memory_interface.struct
--
-- Created:
--          by - emipi270.student-liu.se (muxen2-104.ad.liu.se)
--          at - 16:52:37 10/08/24
--
-- Generated by Siemens HDL Designer(TM) 2024.1 Built on 24 Jan 2024 at 18:06:06
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY The_Reverb_Revolutionary_lib;

ARCHITECTURE struct OF Visual_memory_interface IS

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   COMPONENT Visual_memory_get_address_boundries
   END COMPONENT;
   COMPONENT Visual_memory_read
   PORT (
      c0           : IN     STD_LOGIC ;
      hcnt         : IN     unsigned (10 DOWNTO 0);
      locked       : IN     STD_LOGIC ;
      vcnt         : IN     unsigned (9 DOWNTO 0);
      SRAM_Data    : OUT    std_logic_vector (15 DOWNTO 0);
      sram_address : OUT    std_logic_vector (19 DOWNTO 0);
      hblanc       : IN     std_logic ;
      vblanc       : IN     std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Visual_memory_get_address_boundries USE ENTITY The_Reverb_Revolutionary_lib.Visual_memory_get_address_boundries;
   FOR ALL : Visual_memory_read USE ENTITY The_Reverb_Revolutionary_lib.Visual_memory_read;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_1 : Visual_memory_get_address_boundries;
   U_0 : Visual_memory_read
      PORT MAP (
         c0           => c0,
         hcnt         => hcnt,
         locked       => locked,
         vcnt         => vcnt,
         SRAM_Data    => SRAM_Data,
         sram_address => sram_address,
         hblanc       => hblanc,
         vblanc       => vblanc
      );

END struct;
